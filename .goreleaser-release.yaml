version: 2

before:
  hooks:
    - make generate
    - go test -race ./...

release:
  disable: false

changelog:
  disable: false

archives:
  - id: default
    name_template: >-
      {{ .ProjectName }}_
      {{- title .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else }}{{ .Arch }}{{ end }}
    format: tar.gz
    format_overrides:
      - goos: windows
        format: zip
    files:
      - README.md
      - LICENSE
      - env.example

builds:
  - id: lakerunner-cli
    main: ./main.go
    binary: lakerunner-cli
    goos:
      - linux
      - darwin
      - windows
    goarch:
      - amd64
      - arm64
    env:
      - CGO_ENABLED=0
    ldflags:
      - -X main.commit={{ .Commit }}
      - -X main.version={{ .Version }}
      - -s -w
    flags:
      - -trimpath
    ignore:
      - goos: windows
        goarch: arm64

# Define how to build/push Docker images.
dockers:
  - goos: linux
    goarch: amd64
    dockerfile: Dockerfile
    use: buildx
    image_templates:
      - "public.ecr.aws/cardinalhq.io/lakerunner-cli:v{{ .Version }}-amd64"
      - "public.ecr.aws/cardinalhq.io/lakerunner-cli:latest-amd64"
    build_flag_templates:
      - --pull
      - --platform=linux/amd64
      - --label=org.opencontainers.image.created={{.Date}}
      - --label=org.opencontainers.image.name={{.ProjectName}}
      - --label=org.opencontainers.image.revision={{.FullCommit}}
      - --label=org.opencontainers.image.version={{.Version}}
      - --label=org.opencontainers.image.source={{.GitURL}}
  - goos: linux
    goarch: arm64
    dockerfile: Dockerfile
    use: buildx
    image_templates:
      - "public.ecr.aws/cardinalhq.io/lakerunner-cli:v{{ .Version }}-arm64"
      - "public.ecr.aws/cardinalhq.io/lakerunner-cli:latest-arm64"
    build_flag_templates:
      - --pull
      - --platform=linux/arm64
      - --label=org.opencontainers.image.created={{.Date}}
      - --label=org.opencontainers.image.name={{.ProjectName}}
      - --label=org.opencontainers.image.revision={{.FullCommit}}
      - --label=org.opencontainers.image.version={{.Version}}
      - --label=org.opencontainers.image.source={{.GitURL}}
docker_manifests:
  - name_template: "public.ecr.aws/cardinalhq.io/lakerunner-cli:v{{ .Version }}"
    image_templates:
      - "public.ecr.aws/cardinalhq.io/lakerunner-cli:v{{ .Version }}-amd64"
      - "public.ecr.aws/cardinalhq.io/lakerunner-cli:v{{ .Version }}-arm64"
  - name_template: "public.ecr.aws/cardinalhq.io/lakerunner-cli:latest"
    image_templates:
      - "public.ecr.aws/cardinalhq.io/lakerunner-cli:latest-amd64"
      - "public.ecr.aws/cardinalhq.io/lakerunner-cli:latest-arm64"

homebrew_casks:
  - name: lakerunner-cli
    description: "The intuitive CLI to query your S3 logs"
    homepage: "https://github.com/cardinalhq/lakerunner-cli"
    ids:
      - lakerunner-cli
    url:
      template: "https://github.com/cardinalhq/lakerunner-cli/releases/download/{{ .Tag }}/{{ .ArtifactName }}"
    binary: lakerunner-cli
    repository:
      owner: cardinalhq
      name: homebrew-lakerunner-cli
      branch: main
    commit_author:
      name: goreleaser-lakerunner-cli
      email: aditya@cardinalhq.io
    commit_msg_template: "Brew cask update for {{ .ProjectName }} version {{ .Tag }}"
    caveats: |
      To use lakerunner-cli, you need to set up Lakerunner first.

      Set these environment variables:
        export LAKERUNNER_QUERY_URL=http://localhost:7101
        export LAKERUNNER_API_KEY=your-api-key

      For more information, visit: https://cardinalhq.io/
